name: Build and Publish Teraslice Asset
run-name: ${{ github.actor }} is building and publishing the Teraslice Asset
on:
  push
  # release:
  #   types: [published]

jobs:
  # asset-build:
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       # NOTE: Hard Coded Node Version array
  #       node-version: [14.x, 16.x]
  #       # node-version: [14.x, 16.x, 18.x, 20.x]
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Use Node.js ${{ matrix.node-version }}
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: ${{ matrix.node-version }}
  #     - run: yarn setup
  #     - run: yarn build
  #     - run: yarn global add teraslice-cli
  #     - run: teraslice-cli -v
  #     - run: teraslice-cli assets build
  #     - run: ls -l build/
  #     - name: Archive production artifacts
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: teraslice-asset
  #         path: |
  #           build

  # Asset Upload and NPM Publish should be done only after builds from all Node
  # versions have completed.
  asset-upload:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    # needs: asset-build
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          # NOTE: Hard Coded Node Version
          node-version: '18.x'
          registry-url: 'https://registry.npmjs.org'
      # - name: Download assets from Teraslice Asset Build
      #   uses: actions/download-artifact@v3
      #   with:
      #     name: teraslice-asset
      #     path: ~/build/
      # - run: ls -l
      # - run: ls -l ~/build/
      - run: ls -l ${NPM_CONFIG_USERCONFIG}; cat ${NPM_CONFIG_USERCONFIG}
      - run: npm whoami
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - run: yarn setup
      - run: npm whoami
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          HELLO: "WORLD"
      - run: yarn config list
      # - run: yarn publish:changed
      - run: ./scripts/publish.sh
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      # - name: Upload Assets to Release
      #   uses: softprops/action-gh-release@v1
      #   with:
      #     files: build/**/*.zip
      - run: 'echo "TEST: ${HELLO}"'
