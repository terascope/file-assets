name: Build and Publish Teraslice Asset
run-name: ${{ github.actor }} is building and publishing the Teraslice Asset
on:
  workflow_dispatch:
  release:
    types: [published]

jobs:
  npm-publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          # NOTE: Hard Coded Node Version
          node-version: '18.x'
          registry-url: 'https://registry.npmjs.org'
      - run: yarn setup
      - run: yarn build
      # FIXME: use this instead of dry-run
      # - run: yarn publish:changed
      - run: ./scripts/publish.sh --dry-run
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  asset-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # NOTE: Hard Coded Node Version array
        node-version: [14.x, 16.x]
        # node-version: [14.x, 16.x, 18.x, 20.x]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - run: yarn setup
      - run: yarn build
      - run: yarn global add teraslice-cli
      - run: teraslice-cli -v
      - run: teraslice-cli assets build
      - run: ls -l build/
      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: teraslice-asset
          path: |
            build
      # - run: mkdir build; yarn pack -f build/asg-yarn-npm.tgz
      # - name: Release
      #   uses: softprops/action-gh-release@v1
      #   if: startsWith(github.ref, 'refs/tags/')
      #   with:
      #     files: |
      #       build/*.tgz

  # Upload should be done only after builds from all Node versions have completed.
  asset-upload:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    needs: asset-build
    steps:
      - name: Download math result for job 2
        uses: actions/download-artifact@v3
        with:
          name: teraslice-asset
      - run: ls -l
      - run: ls -l build/
